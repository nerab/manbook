#!/usr/bin/env ruby

$:.unshift File.join(File.dirname(__FILE__), *%w[.. lib])

require 'rubygems'

help = <<HELP
Creates a table of contents (TOC) file for all HTML files in a directory.

Author: Nicolas E. Rabenau nerab@gmx.at
Homepage: http://rubydoc.info/gems/manbook/file/README.md

Basic Usage:

    mktoc <DIRECTORY>

Options:
HELP

def usage
  "Run '#{File.basename(__FILE__)} --help' for further help."
end

require 'optparse'
require 'manbook'
require 'erb'

opts = OptionParser.new do |opts|
  opts.banner = help

  opts.on("--verbose", "Verbose mode - displays additional diagnostic information") do |file|
    ManBook.logger = Logger.new(STDERR)
    ManBook.logger.formatter = ManBook::LogFormatter.new
    ManBook.logger.level = Logger::INFO
  end

  opts.on("--trace", "Trace (debug) mode - displays debug information and stack traces") do |file|
    ManBook.logger = Logger.new(STDERR)
    ManBook.logger.formatter = ManBook::LogFormatter.new
    ManBook.logger.level = Logger::DEBUG
  end

  opts.on("--version", "Display current version") do
    puts "#{File.basename(__FILE__)} " + ManBook::VERSION
    exit 0
  end
end

def render(template, my_binding = binding)
  ERB.new(File.new(File.join(File.dirname(__FILE__), '..', 'templates', template)), 0, "%<>").result(my_binding)
end

begin
  opts.parse!

  src_dir = ARGV.first
  ManBook.logger.debug("Operating in directory #{src_dir}")

  begin
    @pages = ManBook::Indexer.index(src_dir) # .sort
    
    File.open(File.join(src_dir, 'index.html'), 'w') {|f|
      f.write(render('index.html.erb'){
        @pages.collect{|page|
          render('_page.html.erb', binding)
        }.join
      })
    }
  rescue ManBook::ManPageNotFoundError => e
    ManBook.logger.error e.message
    ManBook.logger.debug "Backtrace:\n#{e.backtrace.join("\n")}"
  end
rescue
  ManBook.logger.error $!.message
  ManBook.logger.debug "Backtrace:\n#{$!.backtrace.join("\n")}"
  ManBook.logger.info usage
  exit(1)
end
